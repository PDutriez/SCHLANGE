#ifndef MYDISPLAY_H
#define MYDISPLAY_H
/*******************************************************************************
* CONSTANTES
*******************************************************************************/
#define ERROR 0xFFFF
#define WIDTH 5 //Ancho de una letra
#define HEIGHT 8 //Alto de una letra
#define A {0x7E,0x11,0x11,0x11,0x7E}
#define B {0x7F,0x49,0x49,0x49,0x36}
#define C {0x3E,0x41,0x41,0x41,0x22}
#define D {0x7F,0x41,0x41,0x22,0x1C}
#define E {0x7F,0x49,0x49,0x41,0x41}
#define F {0x7F,0x09,0x09,0x01,0x01}
#define G {0x3E,0x41,0x59,0x49,0x31}
#define H {0x7F,0x08,0x08,0x08,0x7F}
#define I {0x00,0x41,0x7F,0x41,0x00}
#define J {0x20,0x41,0x3F,0x01,0x00}
#define K {0x7F,0x08,0x08,0x14,0x63}
#define L {0x7F,0x40,0x40,0x40,0x40}
#define M {0x7F,0x02,0x04,0x02,0x7F}
#define N {0x7F,0x08,0x10,0x20,0x7F}
#define O {0x3E,0x41,0x41,0x41,0x3E}
#define P {0x7F,0x09,0x09,0x09,0x06}
#define Q {0x3E,0x41,0x51,0x61,0x7E}
#define R {0x7F,0x09,0x09,0x09,0x76}
#define S {0x46,0x49,0x49,0x49,0x31}
#define T {0x01,0x01,0x7F,0x01,0x01}
#define U {0x3F,0x40,0x40,0x40,0x3F}
#define V {0x1F,0x20,0x40,0x20,0x1F}
#define W {0x7F,0x20,0x1C,0x20,0x7F}
#define X {0x63,0x14,0x08,0x14,0x63}
#define Y {0x03,0x04,0x78,0x04,0x03}
#define Z {0x61,0x51,0x49,0x45,0x43}
#define N0 {0x3E,0x49,0x45,0x43,0x3E}
#define N1 {0x00,0x04,0x02,0x7F,0x00}
#define N2 {0x42,0x61,0x51,0x49,0x46}
#define N3 {0x22,0x41,0x49,0x49,0x36}
#define N4 {0x18,0x14,0x12,0x7F,0x10}
#define N5 {0x27,0x45,0x45,0x45,0x39}
#define N6 {0x3E,0x49,0x49,0x49,0x32}
#define N7 {0x01,0x71,0x09,0x05,0x03}
#define N8 {0x36,0x49,0x49,0x49,0x36}
#define N9 {0x26,0x49,0x49,0x49,0x3E}
#define ERASE {0x00,0x00,0x00,0x00,0x00} //Espacio que se usa tambien para borrar
#define ARROWUP {0x04,0x02,0x01,0x02,0x04}
#define ARROWDOWN {0x01,0x02,0x04,0x02,0x01}
/*******************************************************************************
* FUNCIONES
*******************************************************************************/
char collet(int fila, int columna, char letra, int collet);
//COLLET imprime en la matriz, una columna de una letra, en caso de haber cargado
// mal algun valor devuelve NULL, sino devuelve 1.

void rotar(char direction, char times);
//ROTAR se en carga de rotar (wow que ingenioso), hace cualquiera de las cuatro
// direcciones el contenido de la matriz, rellena con vacio la columna nueva y
// pierde la columna o fila que se haya ido fuera de la matriz

void printfrase(char* frase);
//PRINTFRASE imprime directamente una frase en display, ya tiene seteado la
// altura y velocidad, se le debe dar solo la oracion

int printchar(char letra,int x,int y);
//PRINTCHAR imprime todo un char completo en la matriz, devuelve 0 si algo fuer
// mal cargado, sino 1
int togglematrix(int x1,int x2,int y1,int y2);
//TOGGLEMATRIX hace toggle en una casilla indicada, devuelve 1 si lo logro y 0
// si no pudo hacerlo

void matrix2display(void);
//MATRIX2DISPLAY pasa toda la matriz a la matriz del display

void clearmatrix(void);
//CLEARMATRIX limpia la matriz de la funcion
#endif
